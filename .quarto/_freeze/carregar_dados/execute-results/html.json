{
  "hash": "0625b29b44ec37792e6a07fc1457a62b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Carregando dados e pacotes no ambiente R\"\n---\n\n::: {.cell}\n\n```{.r .cell-code}\n# Carregamento dos pacotes utilizados nesta aula\nlibrary(tidyverse)   # Manipulação de dados, gráficos e funções do tipo pipe (%>%)\nlibrary(readxl)      # Leitura de planilhas Excel (.xlsx)\nlibrary(gsheet)      # Importação de planilhas do Google Sheets\nlibrary(janitor)     # Tabelas de contingência e limpeza de nomes de colunas\nlibrary(ggthemes)    # Temas adicionais para gráficos ggplot2\nlibrary(patchwork)   # Combinação de múltiplos gráficos ggplot em uma única visualização\n```\n:::\n\n\n\n\n# Carregamento e Exploração de Dados no R\n\nNesta aula, revisitamos o **workflow reprodutível** para importar, explorar e preparar conjuntos de dados no R. Abordaremos desde a configuração do ambiente até a combinação de gráficos, com exemplos práticos em **tidyverse**, **readxl**, **gsheet**, **janitor**, **ggplot2** e **patchwork**.\n\n------------------------------------------------------------------------\n\n## Configuração do Ambiente\n\nAntes de iniciar qualquer análise, precisamos garantir que todos os pacotes necessários estejam instalados e carregados no R. Esse passo assegura a reprodutibilidade do projeto e evita erros de carregamento durante a renderização do documento.\n\n\n\n\n\n\n\n\n\n------------------------------------------------------------------------\n\n## 1. Leitura de Arquivos Excel com `readxl`\n\nPara trabalhar com dados provenientes de planilhas do Excel, usamos o pacote **readxl**. Podemos ler uma ou várias abas, seja pelo nome ou pela posição, e em seguida inspecionar a estrutura dos dados.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Lê a primeira aba da planilha Excel\ndados <- read_excel(\"dados-diversos.xlsx\")\n\n# Visualizar estrutura dos dados\nstr(dados)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ntibble [405 × 13] (S3: tbl_df/tbl/data.frame)\n $ farm           : num [1:405] 1 2 3 4 5 6 7 8 9 10 ...\n $ region         : chr [1:405] \"SNNPR\" \"SNNPR\" \"SNNPR\" \"SNNPR\" ...\n $ zone           : chr [1:405] \"Bench Maji\" \"Bench Maji\" \"Bench Maji\" \"Bench Maji\" ...\n $ district       : chr [1:405] \"Debub Bench\" \"Debub Bench\" \"Debub Bench\" \"Debub Bench\" ...\n $ lon            : num [1:405] 35.4 35.4 35.4 35.4 35.4 ...\n $ lat            : num [1:405] 6.9 6.9 6.9 6.9 6.9 ...\n $ altitude       : num [1:405] 1100 1342 1434 1100 1400 ...\n $ cultivar       : chr [1:405] \"Local\" \"Mixture\" \"Mixture\" \"Local\" ...\n $ shade          : chr [1:405] \"Sun\" \"Mid shade\" \"Mid shade\" \"Sun\" ...\n $ cropping_system: chr [1:405] \"Plantation\" \"Plantation\" \"Plantation\" \"Plantation\" ...\n $ farm_management: chr [1:405] \"Unmanaged\" \"Minimal\" \"Minimal\" \"Unmanaged\" ...\n $ inc            : num [1:405] 86.7 51.3 43.2 76.7 47.2 ...\n $ sev2           : num [1:405] 55.58 17.9 8.25 46.1 12.25 ...\n```\n\n\n:::\n\n```{.r .cell-code}\nglimpse(dados)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 405\nColumns: 13\n$ farm            <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,…\n$ region          <chr> \"SNNPR\", \"SNNPR\", \"SNNPR\", \"SNNPR\", \"SNNPR\", \"SNNPR\", …\n$ zone            <chr> \"Bench Maji\", \"Bench Maji\", \"Bench Maji\", \"Bench Maji\"…\n$ district        <chr> \"Debub Bench\", \"Debub Bench\", \"Debub Bench\", \"Debub Be…\n$ lon             <dbl> 35.44250, 35.44250, 35.42861, 35.42861, 35.42861, 35.3…\n$ lat             <dbl> 6.904722, 6.904722, 6.904444, 6.904444, 6.904444, 6.90…\n$ altitude        <dbl> 1100, 1342, 1434, 1100, 1400, 1342, 1432, 1100, 1400, …\n$ cultivar        <chr> \"Local\", \"Mixture\", \"Mixture\", \"Local\", \"Local\", \"Mixt…\n$ shade           <chr> \"Sun\", \"Mid shade\", \"Mid shade\", \"Sun\", \"Sun\", \"Mid sh…\n$ cropping_system <chr> \"Plantation\", \"Plantation\", \"Plantation\", \"Plantation\"…\n$ farm_management <chr> \"Unmanaged\", \"Minimal\", \"Minimal\", \"Unmanaged\", \"Unman…\n$ inc             <dbl> 86.70805, 51.34354, 43.20000, 76.70805, 47.15808, 51.3…\n$ sev2            <dbl> 55.57986, 17.90349, 8.25120, 46.10154, 12.25167, 19.91…\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Lê a aba \"sensibilidade_fungicidas\" pelo nome\ndados_sens <- read_excel(\n  path = \"dados-diversos.xlsx\",\n  sheet = \"sensibilidade_fungicidas\"\n)\n\n# Conferir estrutura e tipos\nstr(dados_sens)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ntibble [240 × 9] (S3: tbl_df/tbl/data.frame)\n $ code       : chr [1:240] \"FGT05\" \"FGT05\" \"FGT05\" \"FGT05\" ...\n $ year       : num [1:240] 2007 2007 2007 2007 2007 ...\n $ trial      : num [1:240] 1 1 1 1 1 1 1 1 1 1 ...\n $ state      : chr [1:240] \"RS\" \"RS\" \"RS\" \"RS\" ...\n $ dose       : chr [1:240] \"0.0\" \"0.0\" \"0.05\" \"0.05\" ...\n $ replicate  : num [1:240] 1 2 1 2 1 2 1 2 1 2 ...\n $ germination: num [1:240] 46 44 18 24 9 11 0 0 0 0 ...\n $ ...8       : logi [1:240] NA NA NA NA NA NA ...\n $ ...9       : logi [1:240] NA NA NA NA NA NA ...\n```\n\n\n:::\n\n```{.r .cell-code}\nglimpse(dados_sens)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 240\nColumns: 9\n$ code        <chr> \"FGT05\", \"FGT05\", \"FGT05\", \"FGT05\", \"FGT05\", \"FGT05\", \"FGT…\n$ year        <dbl> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n$ trial       <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ state       <chr> \"RS\", \"RS\", \"RS\", \"RS\", \"RS\", \"RS\", \"RS\", \"RS\", \"RS\", \"RS\"…\n$ dose        <chr> \"0.0\", \"0.0\", \"0.05\", \"0.05\", \"0.5\", \"0.5\", \"1.0\", \"1.0\", …\n$ replicate   <dbl> 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2…\n$ germination <dbl> 46, 44, 18, 24, 9, 11, 0, 0, 0, 0, 0, 0, 50, 50, 43, 44, 2…\n$ ...8        <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...9        <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n```\n\n\n:::\n\n```{.r .cell-code}\n# Converter coluna dose para numérico (remove texto, converte)\ndados_sens <- dados_sens %>%\n  mutate(\n    dose = readr::parse_number(dose)\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Lê a terceira aba pelo índice (caso o nome mude)\ndados3 <- read_excel(\n  path = \"dados-diversos.xlsx\",\n  sheet = 3\n)\n\n# Exploração rápida\nstr(dados3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ntibble [240 × 9] (S3: tbl_df/tbl/data.frame)\n $ code       : chr [1:240] \"FGT05\" \"FGT05\" \"FGT05\" \"FGT05\" ...\n $ year       : num [1:240] 2007 2007 2007 2007 2007 ...\n $ trial      : num [1:240] 1 1 1 1 1 1 1 1 1 1 ...\n $ state      : chr [1:240] \"RS\" \"RS\" \"RS\" \"RS\" ...\n $ dose       : chr [1:240] \"0.0\" \"0.0\" \"0.05\" \"0.05\" ...\n $ replicate  : num [1:240] 1 2 1 2 1 2 1 2 1 2 ...\n $ germination: num [1:240] 46 44 18 24 9 11 0 0 0 0 ...\n $ ...8       : logi [1:240] NA NA NA NA NA NA ...\n $ ...9       : logi [1:240] NA NA NA NA NA NA ...\n```\n\n\n:::\n\n```{.r .cell-code}\nglimpse(dados3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 240\nColumns: 9\n$ code        <chr> \"FGT05\", \"FGT05\", \"FGT05\", \"FGT05\", \"FGT05\", \"FGT05\", \"FGT…\n$ year        <dbl> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n$ trial       <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ state       <chr> \"RS\", \"RS\", \"RS\", \"RS\", \"RS\", \"RS\", \"RS\", \"RS\", \"RS\", \"RS\"…\n$ dose        <chr> \"0.0\", \"0.0\", \"0.05\", \"0.05\", \"0.5\", \"0.5\", \"1.0\", \"1.0\", …\n$ replicate   <dbl> 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2…\n$ germination <dbl> 46, 44, 18, 24, 9, 11, 0, 0, 0, 0, 0, 0, 50, 50, 43, 44, 2…\n$ ...8        <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ...9        <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n```\n\n\n:::\n:::\n\n\n\n\n------------------------------------------------------------------------\n\n## 2. Importação de Arquivos CSV com `readr`\n\nArquivos CSV são frequentemente usados para intercâmbio de dados. Com **readr**, podemos importar e visualizar rapidamente esses arquivos. Caso não haja CSV neste momento, mantenha o chunk comentado para referência futura.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Caso tenha arquivos CSV, use read_csv\n# curve <- read_csv(\"curve.csv\")\n# glimpse(curve)\n```\n:::\n\n\n\n\n------------------------------------------------------------------------\n\n## 3. Importação de Planilhas Online (Google Sheets)\n\nPara manter dados atualizados na nuvem, importamos planilhas do Google Sheets diretamente no R. Isso facilita a colaboração e atualizações em tempo real, sem precisar baixar manualmente arquivos.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Definir URL base da planilha\ngsheet_url <- \"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T\"\n\n# Importa diferentes abas conforme o gid\nsurvey   <- gsheet2tbl(paste0(gsheet_url, \"/edit?gid=1118819738\"))\ndatamg <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=983033137#gid=983033137\")\nmicelial <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=959387827#gid=959387827\")\n```\n:::\n\n\n\n\n------------------------------------------------------------------------\n\n## 4. Exploração de Dados com `dplyr` e `janitor`\n\nDepois de carregar os dados, realizamos verificações iniciais: contagens, agrupamentos, filtros e tabelas de contingência. Essas etapas ajudam a compreender a distribuição e possíveis inconsistências nos conjuntos.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Contagens simples (OBS: Diferente da aula, não rodou a aula)\ntab_state   <- survey |> count(state)\ntab_species <- survey  |> count(species)\ntab_residue <- survey |> count(residue)\n\n# Agrupamento múltiplo\ntab_multi <- survey |> \n  group_by(state, residue, species)  |>\n  count()  |>\n  ungroup()\n\n# Filtros por estado\nRS <- survey |> filter(state == \"RS\")\nPR <- survey |> filter(state == \"PR\")\n\n# Combina RS e PR verticalmente\ncombinado <- rbind (RS, PR)\n\n# Tabela de contingência (frequency table)\nsurvey  |>  tabyl(state, species)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n state Fgra Fspp\n    PR  150   66\n    RS  402   48\n```\n\n\n:::\n:::\n\n\n\n\n------------------------------------------------------------------------\n\n## 5. Visualizações com `ggplot2`\n\nVisualizar dados é fundamental para identificar padrões e outliers. Usamos **ggplot2** para criar boxplots e dispersões, acrescentando temas que melhoram a comunicação visual.\n\n### 5.1. Boxplot: Efeito do Magnésio\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_mg <- datamg %>%\n  ggplot(aes(x = trat, y = comp)) +\n  geom_boxplot(fill = \"darkorange\", outlier.color = NA) +\n  geom_jitter(width = 0.1, color = \"gray20\") +\n  scale_y_continuous(limits = c(5, 20)) +\n  labs(\n    x = \"Tratamento\",\n    y = \"Comprimento (mm)\",\n    title = \"Efeito do Magnésio\",\n    subtitle = \"Tamanho da lesão de mancha parda\",\n    caption = \"Fonte: F. A. Rodrigues et al. (2020)\"\n  ) +\n  theme_clean()\n\nplot_mg\n```\n\n::: {.cell-output-display}\n![](carregar_dados_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n\n### 5.2. Boxplot: Crescimento Micelial\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_micelial <- micelial %>%\n  ggplot(aes(x = especie, y = tcm)) +\n  geom_boxplot(outlier.color = NA) +\n  geom_jitter(width = 0.1) +\n  coord_flip() +\n  labs(\n    x = NULL,\n    y = \"Taxa de crescimento micelial\"\n  ) +\n  theme_classic()\n\nplot_micelial\n```\n\n::: {.cell-output-display}\n![](carregar_dados_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n\n------------------------------------------------------------------------\n\n## 6. Combinação de Gráficos com `patchwork`\n\nPor fim, combinamos múltiplas visualizações para apresentações comparativas, adicionando anotações de painel e salvando em alta resolução.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncombo_plot <- plot_mg + plot_micelial +\n  plot_annotation(tag_levels = \"A\")\n\n# Exibe o layout combinado\ncombo_plot\n```\n\n::: {.cell-output-display}\n![](carregar_dados_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Salvar figura combinada em alta resolução\nggsave(\n  filename = \"combo_plot.png\",\n  plot = combo_plot,\n  bg = \"white\",\n  width = 8,\n  height = 4\n)\n```\n:::\n\n\n\n\n------------------------------------------------------------------------\n\n**OBSERVAÇÕES:**\n\n-   Arquivos CSV devem estar no formato americano (ponto como separador decimal);\n\n-   Pode-se definir isso ao exportar do Excel ou configurar na leitura.\n",
    "supporting": [
      "carregar_dados_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}